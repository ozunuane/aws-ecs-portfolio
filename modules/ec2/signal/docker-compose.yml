version: '3'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - node.name=elasticsearch
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - cluster.name=elasticsearch-docker-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - "network.host=0.0.0.0"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elk
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    build: ./logstash
    image: logstash
    container_name: logstash
    restart: always
    volumes:
      - ./logstash/:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.2
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - "SERVER_HOST=0.0.0.0"
      - "SERVER_PORT=5601"
    networks:
      - elk

  elastic-curator:
    image: untergeek/curator:7.0.0
    container_name: curator
    restart: always
    volumes:
      - ./curator:/curator_dir
    command: --config /curator_dir/config.yml /curator_dir/actionfile.yml
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elk
    depends_on:
      - elasticsearch

  metric-beat:
    image: docker.elastic.co/beats/metricbeat:7.15.2
    container_name: metricbeat
    volumes:
      - /usr/share/metricbeat/metricbeat.yml:/metricbeat.docker.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
      - ./modules.d:/usr/share/metricbeat/modules.d

    command: metricbeat -e
    environment:
      - output.elasticsearch.hosts=["elasticsearch:9200"]
      - AWS_ACCESS_KEY_ID=AKIAZM5Z6MNFEPQSDZ4P
      - AWS_SECRET_ACCESS_KEY=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
    networks:
      - elk
    depends_on:
      - elasticsearch

 
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.13.0
    container_name: apmserver
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
     - 8200:8200
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    networks:
      - elk
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.15.2
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: filebeat -e -strict.perms=false
    networks:
      - elk    

volumes:
  elasticsearch-data:

networks:
  elk: